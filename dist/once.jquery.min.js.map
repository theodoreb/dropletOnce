{"version":3,"sources":["0"],"names":["$","once","alias","elements","id","method","length","window","document","documentElement","fn","this","findOnce","filter","removeOnce","remove","jQuery"],"mappings":"AAKA,EAAEA,EAAGC,KAiBH,SAASC,EAAMC,EAAUC,EAAIC,GAC3B,GACsB,IAApBF,EAASG,SACRH,EAAS,KAAOI,QAAUJ,EAAS,KAAOK,UAC3C,CAIA,OAHeH,EAAOD,EAAI,CAACI,SAASC,kBAGtBH,OAASH,EAAW,GAEpC,OAAOE,EAAOD,EAAID,GAepBH,EAAEU,GAAGT,KAAO,SAAoBG,GAC9B,OAAOJ,EAAEE,EAAMS,KAAMP,EAAIH,KAc3BD,EAAEU,GAAGE,SAAW,SAAwBR,GACtC,OAAOJ,EAAEE,EAAMS,KAAMP,EAAIH,EAAKY,UAchCb,EAAEU,GAAGI,WAAa,SAA0BV,GAC1C,OAAOJ,EAAEE,EAAMS,KAAMP,EAAIH,EAAKc,WAzElC,CA2EGC,OAAQf","sourcesContent":["/**\n * @file\n * jQuery wrapper for once.\n */\n\n(($, once) => {\n  /**\n   * Replaces window and document object with the documentElement.\n   *\n   * Makes sure that the once function will receive an Element while keeping\n   * the ability to call once from jQuery with window and document.\n   *\n   * @param {jQuery} elements\n   *   The jQuery collection to check.\n   * @param {string} id\n   *   The once id value.\n   * @param {function} method\n   *   The callback to apply to elements.\n   *\n   * @return {Array.<Element>}\n   *   The return of the method callback.\n   */\n  function alias(elements, id, method) {\n    if (\n      elements.length === 1 &&\n      (elements[0] === window || elements[0] === document)\n    ) {\n      const result = method(id, [document.documentElement]);\n      // Return the original argument to keep jQuery chaining working as\n      // expected.\n      return result.length ? elements : [];\n    }\n    return method(id, elements);\n  }\n\n  /**\n   * Filter elements that have yet to be processed by the given data ID.\n   *\n   * @param {string} id\n   *   The data ID used to determine if an element has already been processed.\n   *\n   * @return {jQuery}\n   *   jQuery collection of elements that have not yet been processed by the\n   *   callback with the given id.\n   *\n   * @see once\n   */\n  $.fn.once = function jqueryOnce(id) {\n    return $(alias(this, id, once));\n  };\n  /**\n   * Filters elements that have already been processed by a given ID.\n   *\n   * @param {string} id\n   *   The data ID used in a call to $.fn.once() to search for.\n   *\n   * @return {jQuery}\n   *   jQuery collection of elements that have been processed by a callback\n   *   with the given id.\n   *\n   * @see once.find\n   */\n  $.fn.findOnce = function jqueryFindOnce(id) {\n    return $(alias(this, id, once.filter));\n  };\n  /**\n   * Removes the once data from elements based on the given ID.\n   *\n   * @param {string} id\n   *   A data ID used in a call to $.fn.once().\n   *\n   * @return {jQuery}\n   *   A jQuery collection of elements that had the provided id removed from\n   *   their once data.\n   *\n   * @see once.remove\n   */\n  $.fn.removeOnce = function jqueryRemoveOnce(id) {\n    return $(alias(this, id, once.remove));\n  };\n})(jQuery, once);\n"]}